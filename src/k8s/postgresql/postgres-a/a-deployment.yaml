apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-a
  namespace: postgres-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-a
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
      labels:
        app: postgres-a
    spec:
      serviceAccountName: default
      imagePullSecrets:
        - name: ghcr-secret
      containers:
        - name: postgres
          image: postgres:13-alpine
          env:
            - name: POSTGRES_INITDB_ARGS
              value: "--data-checksums"
            - name: POSTGRES_PASSWORD
              value: "password"
            - name: POSTGRES_USER
              value: "admin"
            - name: POSTGRES_DB
              value: "appdb"
            - name: POSTGRES_PORT
              value: "5434"
          ports:
            - containerPort: 5434
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
            - name: config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
            - name: init-script
              subPath: init.sql
              mountPath: /docker-entrypoint-initdb.d/init.sql
            - name: shared-env
              mountPath: /etc/postgres-env
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - |
                    echo $POSTGRES_USER > /etc/postgres-env/POSTGRES_USER
                    echo $POSTGRES_PASSWORD > /etc/postgres-env/POSTGRES_PASSWORD
                    echo $POSTGRES_DB > /etc/postgres-env/POSTGRES_DB
                    echo $POSTGRES_HOST > /etc/postgres-env/POSTGRES_HOST
                    echo $POSTGRES_PORT > /etc/postgres-env/POSTGRES_PORT
          resources:
            limits:
              memory: "256Mi"
              cpu: "1"

        - name: sidecar
          image: ghcr.io/perpetua1g0d/bmstu-diploma/postgres-sidecar:latest
          volumeMounts:
            - name: shared-env
              mountPath: /etc/postgres-env
            - name: auth-config
              mountPath: /etc/auth-config
          env:
            - name: SERVICE_NAME
              value: "postgres-a"
            - name: INIT_TARGET_SERVICE
              value: "postgres-b"
            # - name: SIGN_AUTH_ENABLED
            #   value: "true"
            # - name: VERIFY_AUTH_ENABLED
            #   value: "true"
            - name: SIGN_AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: auth-settings
                  key: SIGN_AUTH_ENABLED
            - name: VERIFY_AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: auth-settings
                  key: VERIFY_AUTH_ENABLED
            # - name: RUN_BENCHMARKS_ON_INIT
            #   value: "true"

            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "256Mi"
              cpu: "1"

      volumes:
        - name: postgresql-data
          emptyDir: {}
        - name: config
          configMap:
            name: postgresql-config
        - name: init-script
          configMap:
            name: postgres-init-script
        - name: shared-env
          emptyDir: {}
        - name: auth-config
          configMap:
            name: auth-settings
