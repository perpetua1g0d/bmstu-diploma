Todo:
talos -> idp
context пробросить в запросы в idP

sign, verify enabled/auth -> signMode, verifyMode

1. Метрики
	- в талосе token_result
	- на клиенте auth_verified, auth_signed, token_issued
	- убрать log.fatalf так как теперь есть метрики с кодом ответов
	+ один большой красивый дашборд
1.2 Тестовое исследование (текущее)

2. База талоса + права в свою базу
	+ ручка UpdatePermissions(), причем никто кроме админа не должен уметь эту ручку использовать.
	+ ручка на сайдкаре refresh tokens()
3. Механизм управления доступами
	Админка: 
		- добавить права
		- запрос /refresh-tokens
		- установить TTL
		- U2I?
		- централизованное включение/выключение авторизации toggle (подумать про безопасность)
		- запускать исследование по кнопке (в другую постргю, кафку)
		- немного стилей + фикс галочек
4. Скоупы в токенах (не только сервис) + несколько скоупов в токене. token roles: {"scope": ["role1", ...]}
5. authClient рефактор + либа + раунд трип.
	- context пробросить везде 
	+ получение эндпоинтов из конфигурации, а то она сейчас не используется

6. Юзкейсы (поднять кафку например еще). Кафка, Редис, ETCD
	1. Кеширование результата запроса: Postgres выполняет тяжелый SELECT → сохраняет результат в Redis.
	2. Сброс кеша при изменении данных: При UPDATE в Postgres → удаление ключа в Redis.
	i2i в Prometheus?

7. Исследование (спросить как правильнее проводить)
	- RT в виде квантилий
	- Лёгкие и тяжёлые запросы исследование
	- много запросов токена
8. Тестирование
	- накинуть юнит тесты на idP и клиента
	- Классы эквивалентности
*. Others
	- Не захломлять докер образами на каждый деплой (либо в teardown очищать)
		+ подумать как запускать без интернета


Бэкофф токена - есть, минимальный


single flight паттерн? 


